SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Exception in thread "main" java.io.FileNotFoundException: /home/khaes/phd/projects/explanation/code/tmp/proj-explanation/patched/target/site/clover/clover.xml (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:219)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at org.jsoup.helper.DataUtil.load(DataUtil.java:82)
	at org.jsoup.helper.DataUtil.load(DataUtil.java:64)
	at org.jsoup.Jsoup.parse(Jsoup.java:135)
	at se.kth.assertgroup.core.analysis.trace.utils.CloverHelper.getPerLineCoverage(CloverHelper.java:68)
	at se.kth.assertgroup.core.analysis.trace.utils.CloverHelper.getPerLineCoverages(CloverHelper.java:59)
	at se.kth.assertgroup.core.analysis.trace.TraceAnalyzer.generateTraceDiffsForGHChange(TraceAnalyzer.java:98)
	at se.kth.assertgroup.core.analysis.trace.Main.main(Main.java:15)
